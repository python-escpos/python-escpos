# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.4.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz libenchant-2-2 gcc libcups2-dev python3-dev xindy
        python -m pip install --upgrade pip
        pip install flake8 pytest tox tox-gh-actions
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Check sorting of imports
      uses: isort/isort-action@master
      with:
        requirementsFiles: "requirements.txt doc/requirements.txt"
        sortPaths: "./doc ./src ./examples ./test ./setup.py"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E,F,W --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with tox
      run: |
        tox
      env:
        ESCPOS_CAPABILITIES_FILE: /home/runner/work/python-escpos/python-escpos/capabilities-data/dist/capabilities.json
    - name: Test mypy with tox
      run: |
        tox -e mypy
      env:
        ESCPOS_CAPABILITIES_FILE: /home/runner/work/python-escpos/python-escpos/capabilities-data/dist/capabilities.json
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        exclude: "**/.mypy_cache"
        flags: unittests
        name: coverage-tox-${{ matrix.python-version }}
        verbose: true
